{"version":3,"sources":["Modal.js","img/marker.png","ReactMap.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","open","children","onClose","className","Button","onClick","ReactMap","useState","latitude","longitude","zoom","width","height","viewport","setViewport","selectedRun","setSelectedRun","useEffect","listener","e","key","window","addEventListener","removeEventListener","mapboxApiAccessToken","process","mapStyle","onViewportChange","markers","map","area","property","long","lat","src","mapMark","preventDefault","id","name","desc","start","end","toast","configure","App","BUTTON_WRAPPER_STYLES","position","zIndex","isOpen","setIsOpen","Img","navClick","autoClose","to","smooth","duration","Card","CardContent","CardMedia","component","image","title","Typography","variant","color","style","console","log","data-tip","place","type","effect","url","playing","controls","loop","volume","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d4db50a.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport {Button} from '@material-ui/core'\r\n\r\n\r\n// const MODAL_STYLES = {\r\n//   position: 'fixed',\r\n//   top: '50%',\r\n//   left: '50%',\r\n//   transform: 'translate(-50%, -50%)',\r\n//   backgroundColor: '#FFF',\r\n//   padding: '50px',\r\n//   zIndex: 1000\r\n// }\r\n\r\n// const OVERLAY_STYLES = {\r\n//   position: 'fixed',\r\n//   top: 0,\r\n//   left: 0,\r\n//   right: 0,\r\n//   bottom: 0,\r\n//   backgroundColor: 'rgba(0, 0, 0, .7)',\r\n//   zIndex: 1000\r\n// }\r\n\r\n// export default function Modal({ open, children, onClose }) {\r\n//   if (!open) return null\r\n\r\n//   return ReactDom.createPortal(\r\n//     <>\r\n     \r\n//     </>,\r\n//     document.getElementById('portal')\r\n//   )\r\n// }\r\n\r\n\r\n\r\nfunction Modal({ open, children, onClose }) {\r\n  if (!open) return null\r\n  \r\nconst MODAL_STYLES = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  backgroundColor: '#FFF',\r\n  padding: '50px',\r\n  zIndex: 1000\r\n}\r\n\r\nconst OVERLAY_STYLES = {\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  backgroundColor: 'rgba(0, 0, 0, .7)',\r\n  zIndex: 1000\r\n}\r\n  return (\r\n    <>\r\n    <div className=\"overlay\" />\r\n      <div className=\"modal-view\">\r\n        {children}\r\n        <Button onClick={onClose} className=\"modal-close-btn\">Close Modal</Button>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal\r\n","export default __webpack_public_path__ + \"static/media/marker.b57ce618.png\";","import React, { useState, useEffect  } from 'react'\r\nimport ReatMapGL, { Marker, Popup } from \"react-map-gl\"\r\nimport * as markers from \"./map-co.json\";\r\nimport mapMark from './img/marker.png'\r\n\r\nfunction ReactMap() {\r\n    const [viewport, setViewport] = useState({\r\n        latitude: 55.869504952695166,\r\n        longitude: -4.24996924288314,\r\n        zoom: 3,\r\n        width: '100vw',\r\n        height: '40vh'\r\n    })    \r\n\r\n    const [selectedRun, setSelectedRun] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const listener = e => {\r\n            if (e.key === \"Escape\") {\r\n                setSelectedRun(null);\r\n            }\r\n        };\r\n        window.addEventListener(\"keydown\", listener);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", listener);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <ReatMapGL\r\n                {...viewport}\r\n                mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\r\n                mapStyle=\"mapbox://styles/cfman29/ckmqje5ht0ww117l939q8zl3r\"\r\n                onViewportChange={viewport => {\r\n                setViewport(viewport)\r\n            }}>\r\n            {markers.place.map(area => (\r\n                <Marker key={area.property.id} latitude={area.property.long} longitude={area.property.lat}>\r\n                    <div className=\"marker\">\r\n                        <img src={mapMark} className=\"marker-btn\" onClick={e => {\r\n                            e.preventDefault();\r\n                            setSelectedRun(area);\r\n                            }}>\r\n                            {/* <img src={mapMark} alt=\"Skate Park Icon\" className=\"marker\" /> */}\r\n                        </img>\r\n                    </div>\r\n                </Marker>\r\n            ))}\r\n            {\r\n                selectedRun ? \r\n                    (\r\n                        <Popup latitude={selectedRun.property.long} longitude={selectedRun.property.lat} onClose={() => {\r\n                                setSelectedRun(null);\r\n                            }\r\n                        }\r\n                        >\r\n                            <div className=\"popup\">\r\n                                <h2>{selectedRun.property.name}</h2>\r\n                                <p>{selectedRun.property.desc}</p>\r\n                                <p>{selectedRun.property.start} - {selectedRun.property.end}</p>\r\n                            </div>\r\n                        </Popup>\r\n                    )\r\n                : null\r\n            }\r\n            </ReatMapGL>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReactMap","import React, { useState} from 'react'\nimport './App.css';\nimport {Button} from '@material-ui/core'\nimport { Link } from 'react-scroll';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Modal from './Modal'// import img from './img/img.png';\nimport ReactPlayer from 'react-player'\n\n// import mak from './img/marker.png'\n\nimport {toast, ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\n\nimport ReactMap from './ReactMap.js'\n\nimport Arrow from '@material-ui/icons/PlayArrowTwoTone';\n\n\n\nimport ReactTooltip from 'react-tooltip';\n\ntoast.configure()\n\nfunction App() {\n\n  \n  const BUTTON_WRAPPER_STYLES = {\n    position: 'relative',\n    zIndex: 1\n  }\n\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const Img = () => <div className=\"div-alert\">\n\n  <div className=\"div-img\" /></div>\n\n  const  navClick =()=>{\n    toast(<Img />,{autoClose: 4000})\n  }\n  \n  return (\n    <div className=\"container\">\n      <ToastContainer className=\"tast\" />\n      <div className=\"navbar\">\n        <ul className=\"nav\">\n          <li className=\"nav-link\" onClick={navClick}><p>Home</p></li>\n          <li className=\"nav-link\" onClick={navClick}><p>Shop</p></li>\n          <li className=\"nav-link\" onClick={navClick}><p>Contact</p></li>\n        </ul>\n      </div>\n      <div className=\"top\" name=\"top\">\n        <h1 className=\"header-text\"><span className=\"Jus\">Jus</span><span className=\"Jax\">Jax</span></h1>\n        <Link className=\"Link1\" to=\"mid\" smooth={true} duration={1000} >\n          <Button className=\"header-btn\">Click</Button>\n        </Link>\n      </div>\n\n      <div className=\"mid\" name=\"mid\">\n        <h1>About us!</h1>\n        <div className=\"mid-cards\">  \n          <Card className=\"card\">\n            <CardContent>\n              <CardMedia component=\"img\" className=\"card-img\" image=\"https://cdn.pixabay.com/photo/2020/07/13/08/15/cereals-5399962_960_720.jpg\" title=\"Image\" />\n              <Typography variant=\"h5\" component=\"h2\" className=\"card-title\">\n                Our Farm\n              </Typography>\n              <Typography className=\"dj card-sub\" color=\"textSecondary\" >\n                All our bars are 100% organic\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" className=\"card-body\">\n                All our bars are produced with high quality organic oats grown on our farm in Banff.\n              </Typography>\n              <div style={BUTTON_WRAPPER_STYLES} onClick={() => console.log('clicked')}>\n                <Button onClick={() => setIsOpen(true)} className=\"modal-open-btn\">Open Modal</Button>\n                <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n                  We grow all of the ingredients in our farm in Banff. Every bite is made with love and care you need without the unwanted added sugar. \n                </Modal>\n              </div>\n            </CardContent>\n          </Card>\n          <Card className=\"card\">\n            <CardContent>\n              <CardMedia component=\"img\" className=\"card-img\" image=\"https://cdn.pixabay.com/photo/2016/03/09/09/59/men-1245982_960_720.jpg\" title=\"Image\" />\n              <Typography variant=\"h5\" component=\"h2\" className=\"card-title\">\n                Our Commitment\n              </Typography>\n              <Typography className=\"dj card-sub\" color=\"textSecondary\" >\n                Healthy snacking form here on out\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" className=\"card-body\">\n                Our aim is to provide you with a delicious and healthy bar.\n              </Typography>\n              <div style={BUTTON_WRAPPER_STYLES} onClick={() => console.log('clicked')}>\n                <Button onClick={() => setIsOpen(true)} className=\"modal-open-btn\">Open Modal</Button>\n                <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n                  We grow all of the ingredients in our farm in Banff. Every bite is made with love and care you need without the unwanted added sugar. \n                </Modal>\n              </div>\n            </CardContent>\n          </Card>\n          <Card className=\"card\">\n            <CardContent>\n              <CardMedia component=\"img\" className=\"card-img\" image=\"https://cdn.pixabay.com/photo/2017/01/01/15/45/running-1944798_960_720.jpg\" title=\"Image\" />\n              <Typography variant=\"h5\" component=\"h2\" className=\"card-title\">\n                Our Goal\n              </Typography>\n              <Typography className=\"dj card-sub\" color=\"textSecondary\" >\n                Going on a run?\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" className=\"card-body\">\n                We are sponsoring countless events around the UK in the running community.\n              </Typography>\n              <div style={BUTTON_WRAPPER_STYLES} onClick={() => console.log('clicked')}>\n                <Button onClick={() => setIsOpen(true)} className=\"modal-open-btn\">Open Modal</Button>\n                <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n                  We grow all of the ingredients in our farm in Banff. Every bite is made with love and care you need without the unwanted added sugar. \n                </Modal>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n      \n      <div className=\"bot-div\" />\n      \n      <div className=\"bot\" name=\"bot\">\n        <div className=\"running\">\n          <div className=\"running-sponsor\">\n            <h3>Our Sponsored events</h3>\n            <h5>JusJax sponsored free running events all over the UK</h5>\n            <div className=\"list-running\">\n              <ul> \n                <li data-tip=\"21st September, 2021\">Edinburgh</li>\n                <li data-tip=\"1st - 5th October, 2021\">Manchester</li>\n                <li data-tip=\"20th - 27th November, 2021\">London</li>\n                <li data-tip=\"5th - 6th January, 2022\">Glasgow</li>\n                <ReactTooltip place=\"right\" type=\"info\" effect=\"solid\" />\n              </ul>\n            </div>\n          </div>\n          <div className=\"running-vid\">\n            <ReactPlayer url='https://youtu.be/NX7QNWEGcNI?t=20' playing=\"false\" controls=\"false\" loop=\"true\" volume=\"0\" className=\"player\" />\n          </div>\n        </div>\n        <h2>Use the map below to fine when and where our listed events are happening!</h2>\n        <div className=\"asda\">\n          <Arrow className=\"arrow-down animate\"/>\n        </div>\n      </div>\n      <div className=\"bot-map\">\n          <ReactMap />\n        </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}